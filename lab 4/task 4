#include <iostream>
#include <string>
using namespace std;

class Car {
    string brand;
    string model;
    float rentalPrice;
    float totalRevenue;
    int days;
    bool availabilityStatus;

public:
    Car(string b, string m, float r, int d, bool avail) {
        brand = b;
        model = m;
        rentalPrice = r;
        days = d;
        availabilityStatus = avail;
        totalRevenue = 0;
    }

    Car(const Car &obj) {
        brand = obj.brand;
        model = obj.model;
        rentalPrice = obj.rentalPrice;
        days = obj.days;
        availabilityStatus = obj.availabilityStatus;
        totalRevenue = obj.totalRevenue;
    }

    ~Car() {}

    bool isAvailable() {
        return availabilityStatus;
    }

    void rent() {
        if (availabilityStatus) {
            float finalPrice = applyDiscount();
            totalRevenue += finalPrice;
            availabilityStatus = false;
            cout << "Car Rented. Final Rental Cost: $" << finalPrice << endl;
        } else {
            cout << "Car not available.\n";
        }
    }

    float applyDiscount() {
        float totalCost = rentalPrice * days;
        if (days > 5 && days <= 10) {
            totalCost *= 0.95;
        } else if (days > 10) {
            totalCost *= 0.90;
        }
        return totalCost;
    }

    void update(string newBrand, string newModel, float newRentalPrice, int newDays) {
        brand = newBrand;
        model = newModel;
        rentalPrice = newRentalPrice;
        days = newDays;
        availabilityStatus = true;
    }

    void display() {
        cout << brand << " " << model 
             << " $" << rentalPrice 
             << " per day | Days: " << days 
             << "  Available: " << (availabilityStatus ? "Yes" : "No") 
             << "  Revenue: $" << totalRevenue << endl;
    }
};

int main() {
    Car c1("Suzuki", "Mehran", 200.5, 7, true);
    c1.display();
    c1.rent();
    c1.display();
    return 0;
}
